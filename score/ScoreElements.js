xmlns="http://www.w3.org/2000/svg";
xlink="http://www.w3.org/1999/xlink"; 

//Function to get the score lines path
function GetScoreLinesPath(length) {
    return "M 0, 0 " + length + 
    ", 0 M 0, 15 " + length + 
    ", 15 M 0, 30 " + length + 
    ", 30 M 0, 45 " + length + 
    ", 45 M 0, 60 " + length + 
    ", 60";
}

//Function to Draw score clefs
function DrawScoreClef(clef) {
    var clefElem = document.createElementNS(xmlns, "path");  //create new path

    switch(clef) {

        case "G":
            clefElem.setAttribute("d", "M20.482,37.557c-1.598,0.521-2.917,1.401-3.96,2.64c-1.042,1.237-1.678,2.59-1.907,4.057c-0.227,1.466-0.039,2.916,0.563,4.35c0.602,1.434,1.735,2.59,3.396,3.471c0.391,0,0.637,0.163,0.734,0.488c0.097,0.326-0.05,0.489-0.439,0.489c-1.598-0.326-2.999-0.994-4.205-2.004c-2.248-1.857-3.486-4.251-3.714-7.185c-0.13-1.466,0.008-2.884,0.416-4.252c0.407-1.369,0.97-2.624,1.688-3.764c0.879-1.205,1.922-2.249,3.128-3.128c0.064-0.065,0.252-0.212,0.561-0.44c0.311-0.229,0.612-0.44,0.905-0.636c0.293-0.195,0.732-0.505,1.318-0.929l-1.807-8.7c-1.597,1.335-3.178,2.81-4.742,4.423c-1.564,1.613-2.981,3.316-4.252,5.108c-1.271,1.792-2.29,3.69-3.055,5.695c-0.766,2.004-1.148,4.114-1.148,6.33c0,2.053,0.432,3.984,1.295,5.792c0.864,1.809,2.013,3.381,3.446,4.716c1.435,1.336,3.088,2.388,4.962,3.154c1.873,0.766,3.771,1.148,5.693,1.148c0.066,0,0.368-0.033,0.905-0.099c0.537-0.064,1.107-0.146,1.709-0.244c0.604-0.097,1.159-0.204,1.664-0.317c0.504-0.115,0.758-0.237,0.758-0.366l-0.294-1.37C22.828,49.565,21.622,43.422,20.482,37.557z M22.192,37.361l4.009,19.406c2.313-0.881,3.876-2.388,4.691-4.521c0.815-2.134,1.002-4.302,0.563-6.501c-0.44-2.2-1.474-4.147-3.104-5.842C26.721,38.208,24.669,37.361,22.192,37.361z M17.059,11.21c1.01-0.522,1.947-1.304,2.813-2.346c0.862-1.042,1.659-2.159,2.395-3.349c0.732-1.189,1.368-2.403,1.905-3.642c0.537-1.239,0.97-2.362,1.296-3.373c0.357-1.076,0.603-2.282,0.733-3.618c0.129-1.336-0.082-2.46-0.635-3.372c-0.393-0.815-0.905-1.287-1.541-1.418c-0.635-0.13-1.271-0.082-1.906,0.147c-0.636,0.228-1.238,0.595-1.808,1.1c-0.571,0.505-0.987,0.953-1.248,1.344c-0.717,1.271-1.344,2.688-1.881,4.252c-0.538,1.564-0.905,3.186-1.1,4.864c-0.196,1.678-0.221,3.291-0.074,4.839C16.155,8.188,16.504,9.711,17.059,11.21z M15.593,12.725c-0.555-2.15-1.043-4.26-1.467-6.33c-0.424-2.069-0.636-4.196-0.636-6.379c0-1.597,0.115-3.348,0.343-5.254c0.229-1.906,0.644-3.764,1.246-5.572c0.604-1.809,1.435-3.43,2.492-4.864c1.061-1.434,2.469-2.477,4.229-3.129c0.163-0.064,0.326-0.097,0.49-0.097c0.227,0,0.496,0.13,0.805,0.391c0.311,0.26,0.637,0.643,0.979,1.148c0.342,0.505,0.643,1.026,0.904,1.564c0.261,0.537,0.456,0.904,0.588,1.1c0.878,1.662,1.521,3.43,1.93,5.303c0.406,1.874,0.644,3.74,0.709,5.598c0.129,2.802-0.025,5.572-0.464,8.309c-0.439,2.737-1.329,5.41-2.665,8.016c-0.455,0.782-0.921,1.573-1.394,2.371c-0.474,0.799-1.033,1.572-1.686,2.322c-0.131,0.131-0.367,0.367-0.709,0.708c-0.343,0.343-0.693,0.692-1.051,1.051c-0.358,0.358-0.677,0.693-0.953,1.002c-0.277,0.309-0.415,0.497-0.415,0.562l2.003,9.777c0.013,0.064,1.003,0,1.003,0c1.912,0.024,3.937,0.333,5.694,1.026c1.694,0.782,3.152,1.857,4.375,3.226c1.222,1.369,2.198,2.909,2.933,4.619c0.732,1.711,1.1,3.446,1.1,5.206c0,1.76-0.261,3.553-0.782,5.377c-1.336,3.454-3.471,6.012-6.403,7.674c-0.326,0.195-0.791,0.416-1.394,0.66c-0.602,0.244-0.84,0.627-0.709,1.149c0.784,3.55,1.312,5.994,1.59,7.332c0.276,1.339,0.48,3.065,0.61,5.181c0.13,2.023-0.221,3.843-1.051,5.472c-0.832,1.634-1.947,2.96-3.35,3.984c-1.399,1.029-2.679,1.629-3.836,1.813c-1.156,0.179-1.946,0.266-2.371,0.266c-1.466,0-2.899-0.278-4.301-0.833c-1.727-0.647-3.177-1.641-4.35-2.979c-1.173-1.339-1.76-2.967-1.76-4.885c0-1.209,0.35-2.449,1.051-3.72c0.701-1.27,1.622-2.184,2.762-2.732c1.271-0.655,2.42-0.833,3.445-0.543c1.027,0.295,1.874,0.852,2.543,1.666c0.668,0.814,1.134,1.801,1.393,2.955c0.261,1.16,0.245,2.239-0.05,3.25c-0.293,1.012-0.887,1.87-1.783,2.566c-0.896,0.703-2.143,1.018-3.739,0.956c0.651,1.173,1.564,1.913,2.737,2.221c1.173,0.315,2.38,0.333,3.617,0.074c1.238-0.26,2.403-0.741,3.495-1.443c1.092-0.697,1.947-1.457,2.566-2.271c0.392-0.586,0.685-1.351,0.88-2.294c0.195-0.951,0.311-1.932,0.343-2.962c0.031-1.023,0-1.825-0.099-2.393c-0.098-0.574-0.261-1.462-0.488-2.665c-0.977-3.942-1.598-6.421-1.857-7.434c-0.131-0.322-0.481-0.428-1.051-0.314c-0.57,0.115-1.051,0.221-1.442,0.314c-2.802,0.364-5.149,0.198-7.039-0.485c-2.933-0.782-5.515-2.175-7.747-4.179c-2.232-2.004-4.025-4.432-5.377-7.284C0.676,45.043,0,42.876,0,41.394c0-1.482,0-2.419,0-2.811c0-2.639,0.456-5.115,1.368-7.43c1.728-3.617,3.772-6.941,6.135-9.971C9.866,18.15,12.563,15.332,15.593,12.725z");
            break;

        case "G_OCT":
            clefElem = DrawScoreClef("G");
            var currPath = clefElem.getAttribute("d");
            currPath += "M13.684,90.291c-0.512-0.678-0.852-1.361-1.022-1.872c-0.17-0.511-0.341-1.192-0.341-1.876c0-1.188,0.341-2.212,1.192-2.892c0.852-0.682,1.874-1.192,3.236-1.192c1.192,0,2.213,0.341,2.895,1.021c0.68,0.682,1.021,1.533,1.021,2.384c0,0.679-0.17,1.192-0.512,1.703c-0.34,0.511-0.682,1.021-1.191,1.362c-0.342,0.171-0.852,0.511-1.703,0.852c0.851,1.192,1.533,2.043,1.703,2.554s0.34,1.022,0.34,1.703c0,1.362-0.51,2.554-1.533,3.577c-1.021,1.022-2.213,1.531-3.746,1.531c-1.362,0-2.383-0.341-3.234-1.021c-0.852-0.682-1.192-1.702-1.192-2.725c0-0.681,0.169-1.364,0.511-2.046c0.341-0.679,0.851-1.188,1.533-1.703C12.151,90.974,12.833,90.633,13.684,90.291z M14.195,90.801c-0.341,0.342-0.682,0.682-0.852,0.851c-0.171,0.343-0.511,1.024-0.682,1.703c-0.17,0.682-0.341,1.533-0.341,2.555c0,0.682,0.171,1.193,0.341,1.533c0.171,0.341,0.682,0.512,1.192,0.512c0.511,0,1.021-0.343,1.362-0.852c0.511-0.68,0.852-1.531,0.852-2.554c0-0.681-0.17-1.194-0.341-1.874C15.557,91.994,14.875,91.651,14.195,90.801z M16.577,88.93c0.342-0.341,0.683-0.681,0.852-0.852c0.341-0.681,0.513-1.703,0.513-2.896c0-0.679-0.172-1.361-0.341-1.529c-0.172-0.173-0.511-0.683-0.852-0.683s-0.682,0.17-1.022,0.513c-0.34,0.509-0.511,1.19-0.511,2.212c0,0.514,0.171,1.024,0.341,1.533S16.068,88.246,16.577,88.93z";
            clefElem.setAttribute("d", currPath);
            break;

        case "F":
            clefElem.setAttribute("d", "M0,46.704c0-0.504,2.425-2.577,5.39-4.607c6.373-4.365,10.975-9.14,13.652-14.166c6.139-11.524,4.194-23.541-3.987-24.638C10.529,2.687,4.8,5.988,4.8,9.203c0,1.193,0.305,1.289,3.623,1.141c4.059-0.181,6.805,3.77,4.608,6.63C9.561,21.495,1.2,18.898,1.2,13.299c0-4.907,2.986-8.812,8.242-10.778C20.689-1.688,31.395,6.07,30.457,17.749c-0.768,9.572-9.102,18.512-25.281,27.119C1.337,46.909,0,47.384,0,46.704L0,46.704zM39.893,9.672c0,1.948-1.508,3.528-3.368,3.528c-1.859,0-3.367-1.58-3.367-3.528c0-1.949,1.508-3.528,3.367-3.528C38.385,6.145,39.893,7.724,39.893,9.672zM39.893,21.6c0,1.948-1.507,3.528-3.368,3.528c-1.859,0-3.367-1.58-3.367-3.528c0-1.949,1.508-3.528,3.367-3.528C38.386,18.072,39.893,19.651,39.893,21.6z");
            break;

        case "C":
            clefElem.setAttribute("d", "M0,29.977V0.045H3.36h3.36v29.932v29.934H3.36H0V29.977z M9.748,0.034L12.192,0l0.025,14.4c0.016,9.025,0.225,14.355,0.603,14.355c0.883,0,3.56-4.269,5.187-8.272l1.417-3.487l1.227,2.773c1.467,3.313,3.583,4.865,6.277,4.599c3.217-0.317,4.416-2.579,4.716-8.897c0.432-9.045-1.304-12.906-6.01-13.375c-3.332-0.332-4.86,0.475-3.889,2.054c0.367,0.599,1.047,1.696,1.509,2.442c0.742,1.194,0.691,1.553-0.424,3.053c-1.646,2.212-3.62,2.474-5.479,0.729c-2.027-1.906-1.891-4.307,0.396-6.91c4.914-5.598,14.741-4.174,19.358,2.803c1.473,2.224,1.685,3.135,1.674,7.172c-0.014,5.029-0.901,7.414-3.745,10.05c-2.19,2.03-6.137,3.047-9.846,2.538c-2.924-0.403-3.058-0.354-4.283,1.581c-1.237,1.956-1.241,2.04-0.148,4.167c1.115,2.172,1.115,2.172,5.954,2.172c4.391,0,5.053,0.164,7.15,1.762c7.806,5.945,6.451,18.943-2.4,23.043c-6.44,2.98-15.577-0.652-15.577-6.193c0-2.211,1.907-4.254,3.97-4.254c1.718,0,3.972,1.938,3.972,3.418c0,0.535-0.575,1.783-1.279,2.77c-1.596,2.242-0.762,3.586,2.224,3.586c2.642,0,5.554-2.463,6.364-5.385c0.808-2.906,0.804-10.16-0.006-13.076c-1.578-5.68-8.335-5.383-10.447,0.459c-0.754,2.084-1.742,2.854-1.744,1.355c-0.001-1.502-3.535-8.121-5.11-9.574l-1.608-1.481l0.032,15.977l-0.058,13.762H9.748V0.034L9.748,0.034z");
            break;

        case "NEUTRAL_1":
            clefElem.setAttribute("d", "M0,30.031V5.406h8.108h8.108v24.626v24.625H8.108H0V30.031z M13.814,30.031v-19.82H8.108H2.402v19.82v19.82h5.706h5.706V30.031L13.814,30.031z");
            break;

        case "NEUTRAL_2":
            clefElem = document.createElementNS(xmlns, "polygon");  //create new path
            clefElem.setAttribute("points", "0,30.031 0,15.616 4.205,15.616 8.409,15.616 8.409,30.031 8.409,44.447 4.205,44.447 0,44.447 0,30.031 17.418,30.031 17.418,15.616 21.623,15.616 25.827,15.616 25.827,30.031 25.827,44.447 21.623,44.447 17.418,44.447 17.418,30.031 ");
            break;

        default:
            throw "INVALID_CLEF_ELEMENT_TO_DRAW";
    }

    return clefElem;
}

//Function to draw the key signature object
function DrawKeySignature(fifth) {
    var keySigGroup,
        currSymbol;

    switch(fifth) {

        case 1:
            keySigGroup = $G.create("g");
            currSymbol = DrawNoteAtt("sharp");
            keySigGroup.appendChild(currSymbol);
            currSymbol.translate(0, -7.5);
            break;

        case 2:
            keySigGroup = DrawKeySignature(1);
            currSymbol = DrawNoteAtt("sharp");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 15);
            keySigGroup.appendChild(currSymbol);
            break;

        case 3:
            keySigGroup = DrawKeySignature(2);
            currSymbol = DrawNoteAtt("sharp");
            currSymbol.translate(keySigGroup.getBBox().width + 2, -15);
            keySigGroup.appendChild(currSymbol);
            break;

        case 4:
            keySigGroup = DrawKeySignature(3);
            currSymbol = DrawNoteAtt("sharp");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 7.5);
            keySigGroup.appendChild(currSymbol);
            break;

        case 5:
            keySigGroup = DrawKeySignature(4);
            currSymbol = DrawNoteAtt("sharp");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 30);
            keySigGroup.appendChild(currSymbol);
            break;

        case 6:
            keySigGroup = DrawKeySignature(5);
            currSymbol = DrawNoteAtt("sharp");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 0);
            keySigGroup.appendChild(currSymbol);
            break;

        case 7:
            keySigGroup = DrawKeySignature(6);
            currSymbol = DrawNoteAtt("sharp");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 22.5);
            keySigGroup.appendChild(currSymbol);
            break;

        case -1:
            keySigGroup = $G.create("g");
            currSymbol = DrawNoteAtt("flat");
            keySigGroup.appendChild(currSymbol);
            currSymbol.translate(0, 22.5);
            break;

        case -2:
            keySigGroup = DrawKeySignature(-1);
            currSymbol = DrawNoteAtt("flat");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 0);
            keySigGroup.appendChild(currSymbol);
            break;

        case -3:
            keySigGroup = DrawKeySignature(-2);
            currSymbol = DrawNoteAtt("flat");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 30);
            keySigGroup.appendChild(currSymbol);
            break;

        case -4:
            keySigGroup = DrawKeySignature(-3);
            currSymbol = DrawNoteAtt("flat");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 7.5);
            keySigGroup.appendChild(currSymbol);
            break;

        case -5:
            keySigGroup = DrawKeySignature(-4);
            currSymbol = DrawNoteAtt("flat");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 37.5);
            keySigGroup.appendChild(currSymbol);
            break;

        case -6:
            keySigGroup = DrawKeySignature(-5);
            currSymbol = DrawNoteAtt("flat");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 15);
            keySigGroup.appendChild(currSymbol);
            break;

        case -7:
            keySigGroup = DrawKeySignature(-6);
            currSymbol = DrawNoteAtt("flat");
            currSymbol.translate(keySigGroup.getBBox().width + 2, 45);
            keySigGroup.appendChild(currSymbol);
            break;
    }

    return keySigGroup
}

//Function to draw the time signature object
function DrawTimeSig(beats, beatType) {
    var beatsGroup = document.createElementNS(xmlns, "g"),
        beatTypeGroup = document.createElementNS(xmlns, "g"),
        nextPos = 0;

    for(var i = 0; i < beats.length; i++) {
        var beatsValue = parseInt(beats.charAt(i)),
            beatsElem = drawTimeSigNum(beatsValue);

        beatsGroup.appendChild(beatsElem);   
        beatsElem.setAttribute("transform", "translate(" + nextPos + " 0)");

        //update the next position value (must append to get the values)
        nextPos += getTimeSigNextPos(beatsValue);
    }

    nextPos = 0;

    for(var i = 0; i < beatType.length; i++) {
        var beatTypeValue = parseInt(beatType.charAt(i)),
            beatTypeElem = drawTimeSigNum(beatTypeValue);

        beatTypeGroup.appendChild(beatTypeElem);   
        beatTypeElem.setAttribute("transform", "translate(" + nextPos + " 0)");

        //update the next position value
        nextPos += getTimeSigNextPos(beatTypeValue);
    }

    //put the lower width value in the center
    document.documentElement.appendChild(beatsGroup);
    document.documentElement.appendChild(beatTypeGroup);
    var beatsLength = beatsGroup.getBBox().width,
        beatTypeLength = beatTypeGroup.getBBox().width;

    if(beatsLength > beatTypeLength) {
        beatTypeGroup.setAttribute("transform", "translate(" + (beatsLength - beatTypeLength) / 2 + " 30)");
    } else {
        beatsGroup.setAttribute("transform", "translate(" + (beatTypeLength - beatsLength) / 2 + " 0)");
        beatTypeGroup.setAttribute("transform", "translate(0 30)");
    }

    var timeSigGroup = document.createElementNS(xmlns, "g");

    timeSigGroup.appendChild(beatsGroup);
    timeSigGroup.appendChild(beatTypeGroup);

    return timeSigGroup;
}

//Function to draw the time symbols cut and common
function DrawTimeSymbol(symbol) {
    var timeSymbol = $G.create("path");  //create new path
        timeSymbol.setAttribute("d", "M24.739,24.021c0-3.428-3.25-8.963-11.938-8.964C6.368,15.06,0.002,22.809,0,29.571c0.03,8.635,4.863,16.113,13.147,16.113c9.297-0.003,11.678-7.726,11.674-11.586c-0.331-0.001-0.767,0.003-1.038,0.005c-0.526,3.232-3.648,9.706-8.998,9.706c-5.83-0.001-7.287-5.19-7.285-13.569c0-10.549,3.453-13.306,7.607-13.308c3.29,0.005,5.091,1.752,5.347,2.192c0.154,0.245,0.166,0.571-0.048,0.799C17.905,19.905,15,21.648,15,25.16c0,2.101,1.483,4.485,4.7,4.485C22.139,29.644,24.731,27.764,24.739,24.021L24.739,24.021z");    

    switch(symbol) {
        case "common":
            return timeSymbol;             

        case "cut":
            var timeSymbolGroup = $G.create("g"),
                cutLine = $G.create("path");  //create new path

            cutLine.setAttribute("d", "M11.918,4.693h1.271l-0.027,50.74h-1.243V4.693z");

            timeSymbolGroup.appendChild(timeSymbol);
            timeSymbolGroup.appendChild(cutLine);
            
            return timeSymbolGroup;
            
        default:
            throw "INVALID_TIME_SYMBOL_TO_DRAW";
    }
}

function getTimeSigNextPos(value) {
    switch(value) {
        case 0:
            return 25;
        case 1:
            return 20;
        case 2:
            return 25;
        case 3:
            return 25;
        case 4:
            return 25;
        case 5:
            return 23;
        case 6:
            return 25;
        case 7:
            return 25;
        case 8:
            return 25;
        case 9:
            return 25;
    }
}

//Function to draw the number used in the time sig
function drawTimeSigNum(number) {
    var numberElem = document.createElementNS(xmlns, "path");  //create new path

    switch(number) {
        case 0:
            numberElem.setAttribute("d","M11.146,1.5c3.921,0.258,6.759,1.877,8.514,4.86c1.754,2.983,2.631,5.863,2.631,8.64c0,2.829-0.877,5.735-2.631,8.718c-1.755,2.928-4.593,4.525-8.514,4.782c-3.923-0.257-6.76-1.851-8.515-4.782C0.878,20.734,0,17.828,0,15c0-2.777,0.877-5.659,2.632-8.64C4.385,3.327,7.224,1.705,11.146,1.5 M11.146,3.429C9.185,3.686,7.921,5.254,7.354,8.136c-0.618,2.829-0.902,5.141-0.851,6.944c-0.052,1.8,0.181,4.089,0.696,6.867c0.567,2.827,1.884,4.371,3.948,4.63c2.012-0.259,3.302-1.802,3.87-4.63c0.566-2.778,0.801-5.067,0.695-6.867c0.053-1.803-0.207-4.116-0.773-6.944C14.319,5.254,13.054,3.686,11.146,3.429");
            break;
        case 1:
            numberElem.setAttribute("d","M12.428,1.5v20.928c0,1.279,0.18,2.266,0.542,2.957c0.359,0.691,1.235,1.064,2.624,1.117V28.5H2.548v-1.998c1.389-0.053,2.265-0.426,2.624-1.117c0.362-0.693,0.542-1.678,0.542-2.957V8.93H5.636l-4.092,6.949L0,15.24L5.636,1.5H12.428");
            break;
        case 2:
            numberElem.setAttribute("d","M7.151,6.669C8.179,7.082,8.771,8.058,8.926,9.6c-0.051,1.029-0.489,1.877-1.312,2.546c-0.825,0.72-1.75,1.079-2.779,1.079c-2.523-0.256-3.911-1.593-4.169-4.01c0-2.006,0.823-3.778,2.47-5.321c1.648-1.492,4.425-2.29,8.338-2.393c2.984,0.103,5.225,0.926,6.716,2.469c1.544,1.492,2.316,3.216,2.316,5.17c-0.36,3.292-2.137,5.528-5.327,6.713c-3.139,1.129-5.867,2.494-8.183,4.086v0.078c3.602-0.412,6.459,0.129,8.569,1.621l2.162,0.151c0.772-0.31,1.209-1.338,1.312-3.084h1.93c0.051,2.211-0.335,4.344-1.158,6.399c-0.875,2.107-2.624,3.238-5.249,3.396c-1.853-0.205-3.371-0.849-4.555-1.931c-1.184-1.184-2.572-1.93-4.169-2.237c-2.161,0.104-3.397,1.183-3.705,3.24H0.125c-0.463-2.83,0.362-5.115,2.471-6.865c2.109-1.748,4.246-3.188,6.406-4.319c1.339-0.822,2.471-1.876,3.397-3.164c0.979-1.335,1.493-2.828,1.544-4.474c-0.103-3.65-1.595-5.35-4.477-5.091c-2.78,0.053-4.117,0.591-4.014,1.623C5.606,5.847,6.172,6.31,7.151,6.669");
            break;
        case 3:
            numberElem.setAttribute("d","M7.103,5.832C7.721,6.138,8.081,7.039,8.184,8.53c-0.207,2.003-1.519,3.084-3.937,3.237c-2.316-0.153-3.551-1.414-3.706-3.779C0.696,5.47,1.854,3.775,4.015,2.9c2.111-0.926,4.066-1.388,5.868-1.388c2.109-0.103,4.246,0.437,6.406,1.622c2.162,1.18,3.294,3.056,3.397,5.626c-0.051,2.877-2.162,4.805-6.33,5.781v0.077c1.595,0.153,3.088,0.72,4.477,1.694c1.337,0.979,2.034,2.42,2.085,4.318c-0.103,2.932-1.261,4.983-3.474,6.168c-2.111,1.184-4.375,1.747-6.794,1.696c-2.06,0.051-4.116-0.361-6.176-1.233C1.363,26.386,0.205,24.742,0,22.327c0.256-2.468,1.621-3.829,4.092-4.087c2.367,0.207,3.653,1.467,3.86,3.779c-0.207,1.129-0.644,2.105-1.313,2.93c0.104,1.025,0.618,1.566,1.544,1.617c1.544,0.104,2.779-0.359,3.706-1.387c0.979-0.978,1.491-2.265,1.544-3.855c-0.104-2.264-0.876-3.803-2.316-4.626c-1.39-0.821-3.037-1.232-4.941-1.232V13.54c2.265,0,3.937-0.361,5.018-1.081c1.184-0.72,1.776-2.08,1.776-4.085c-0.051-3.136-1.493-4.781-4.324-4.935L6.949,3.672C6.382,3.774,6.047,4.108,5.944,4.673C6.1,5.136,6.486,5.521,7.103,5.832");
            break;
        case 4:
            numberElem.setAttribute("d","M9.803,10.662c-2.726,3.482-5.197,6.189-7.411,8.115v0.158h8.261v-5.542l6.715-6.589v12.131h3.011v2.25h-3.011v1.207c-0.051,1.284,0.103,2.276,0.463,2.971c0.36,0.699,1.184,1.072,2.471,1.127v2.01H7.566v-2.01c1.337-0.055,2.186-0.428,2.546-1.127c0.36-0.695,0.542-1.687,0.542-2.971v-1.207H0v-2.25c2.265-2.248,3.911-4.927,4.941-8.035C6.073,7.741,6.794,4.608,7.102,1.5h9.033C14.693,4.125,12.584,7.181,9.803,10.662");
            break;
        case 5:
            numberElem.setAttribute("d","M13.453,6.293c-1.39,0.905-3.141,1.333-5.25,1.279l-5.249-0.72l-0.155,6.071c2.058-1.385,4.271-2.078,6.639-2.078c2.574,0.054,4.734,0.798,6.485,2.237c1.75,1.332,2.676,3.381,2.779,6.148c0,2.025-0.823,4.047-2.47,6.074c-1.749,1.967-4.606,3.035-8.569,3.195c-1.802,0-3.5-0.508-5.095-1.52c-1.544-0.959-2.394-2.422-2.548-4.396c-0.103-1.226,0.205-2.313,0.926-3.272c0.721-0.957,1.595-1.465,2.625-1.519c2.676,0,4.015,1.383,4.015,4.154c-0.103,1.01-0.567,1.836-1.39,2.475c-0.309,0.16-0.489,0.453-0.54,0.882c0.308,0.901,0.977,1.303,2.007,1.194c0.979,0.106,2.084-0.426,3.319-1.599c1.236-1.809,1.699-3.834,1.39-6.071c-0.103-1.754-0.618-3.193-1.544-4.31c-0.977-1.066-2.084-1.625-3.32-1.679c-1.903,0.053-3.551,0.933-4.939,2.637h-1.7L1.101,1.5l7.72,0.88l7.564-0.88C15.921,3.844,14.943,5.441,13.453,6.293");
            break;
        case 6:
            numberElem.setAttribute("d","M11.732,1.5c1.75,0,3.422,0.488,5.018,1.467c1.544,0.978,2.446,2.365,2.702,4.166c-0.256,2.365-1.595,3.677-4.014,3.935c-2.316-0.207-3.604-1.388-3.86-3.549c0.154-0.978,0.488-1.928,1.004-2.854c0.205-0.927-0.309-1.338-1.544-1.236c-0.979,0.052-1.75,0.516-2.316,1.39L7.565,7.441c-0.516,1.595-0.772,2.933-0.772,4.014v3.856c2.007-1.234,4.194-1.903,6.562-2.006c2.058,0.052,3.757,0.693,5.095,1.929c1.44,1.234,2.188,2.905,2.239,5.013c-0.155,2.621-1.185,4.629-3.088,6.019c-1.957,1.489-4.169,2.235-6.64,2.235h-0.077c-3.705-0.104-6.458-1.44-8.259-4.012C0.875,21.917,0,18.833,0,15.233c0-3.807,1.028-7.021,3.088-9.642C5.094,2.968,7.975,1.603,11.732,1.5 M13.585,17.395c-0.463-1.289-1.389-2.007-2.779-2.161c-1.39,0.152-2.342,0.874-2.856,2.161c-0.464,1.336-0.669,2.47-0.618,3.396c-0.051,1.233,0.154,2.494,0.618,3.778c0.514,1.234,1.466,1.902,2.856,2.007c1.39-0.104,2.316-0.771,2.779-2.007c0.463-1.284,0.669-2.543,0.618-3.778C14.255,19.863,14.048,18.732,13.585,17.395");
            break;
        case 7:
            numberElem.setAttribute("d","M13.741,4.004c0.823,1.241,1.827,1.732,3.009,1.475c1.391-0.621,2.162-1.681,2.316-3.18h1.93l-1.312,6.356l-2.935,5.737c-2.521,4.288-3.704,8.99-3.551,14.107H4.092c0.102-2.944,1.131-5.659,3.088-8.138c1.902-2.377,3.988-4.396,6.252-6.048l2.471-2.403c0.669-0.774,1.132-1.809,1.39-3.1c-2.677,2.066-4.606,2.816-5.79,2.248c-1.185-0.569-2.163-1.396-2.935-2.48c-2.984-2.741-5.121-2.17-6.406,1.705H0V2.299h2.162c0.102,0.98,0.564,1.446,1.389,1.396C4.22,3.28,4.914,2.79,5.635,2.222c0.67-0.567,1.828-0.801,3.475-0.698C11.322,1.991,12.867,2.817,13.741,4.004");
            break;
        case 8:
            numberElem.setAttribute("d","M10.112,1.504c1.956-0.051,3.937,0.36,5.945,1.235c2.109,0.823,3.242,2.391,3.396,4.703c-0.256,2.728-1.568,4.783-3.937,6.171c3.192,1.854,4.76,3.987,4.709,6.403c-0.051,2.159-1.08,4.088-3.088,5.783c-1.954,1.696-4.554,2.598-7.797,2.7c-2.263,0-4.348-0.592-6.252-1.774C1.184,25.493,0.154,23.666,0,21.251c0.051-1.44,0.567-2.701,1.544-3.781c0.977-1.079,2.111-1.901,3.397-2.469c-2.728-1.285-4.195-3.446-4.401-6.478c0.103-2.417,1.185-4.19,3.243-5.324C5.841,2.071,7.952,1.504,10.112,1.504 M12.891,12.226c1.544-1.131,2.471-2.673,2.78-4.627c0-1.542-0.695-2.622-2.085-3.24c-1.337-0.667-2.649-0.976-3.937-0.925C7.436,3.332,6.046,4.309,5.481,6.367c0.207,1.389,1.313,2.699,3.32,3.934C10.91,11.531,12.274,12.176,12.891,12.226 M11.733,18.706l-4.477-2.468c-1.955,1.131-3.087,2.773-3.396,4.935c0.051,1.392,0.642,2.599,1.776,3.624c1.08,0.979,2.289,1.493,3.628,1.543c1.288,0.207,2.497-0.051,3.627-0.771c1.081-0.719,1.674-1.771,1.776-3.16C14.462,20.864,13.484,19.631,11.733,18.706");
            break;
        case 9:
            numberElem.setAttribute("d","M9.882,1.5c3.758,0.103,6.51,1.44,8.26,4.011c1.748,2.572,2.6,5.684,2.547,9.335c0,3.394-0.979,6.478-2.934,9.255c-1.904,2.776-4.813,4.243-8.725,4.397c-1.748,0-3.422-0.49-5.018-1.465c-1.595-0.979-2.521-2.396-2.779-4.244c0.207-2.365,1.518-3.679,3.937-3.935c2.471,0.203,3.783,1.465,3.938,3.781l-1.004,2.775c-0.103,0.977,0.387,1.361,1.467,1.156c1.699-0.205,2.83-1.338,3.397-3.396c0.565-1.801,0.875-3.603,0.927-5.397l0.153-3.01l-3.241,1.311l-3.396,0.617c-2.008-0.051-3.732-0.691-5.172-1.927C0.849,13.534,0.103,11.862,0,9.751C0.103,7.13,1.158,5.099,3.165,3.66c1.956-1.441,4.169-2.161,6.639-2.161L9.882,1.5 M7.181,12.609c0.514,1.336,1.492,2.083,2.932,2.237c1.287-0.153,2.188-0.9,2.703-2.237c0.463-1.388,0.668-2.701,0.617-3.935l-0.849-3.395c-0.464-1.131-1.288-1.75-2.472-1.853C8.826,3.531,7.924,4.147,7.411,5.28c-0.514,1.132-0.799,2.262-0.85,3.394C6.459,9.908,6.664,11.221,7.181,12.609");
            break;

        default:
            throw "INVALID_NUMBER_TO_DRAW";
    }
    return numberElem;
}
            
function DrawNote(denominator) {
    var mElem = document.createElementNS(xmlns, "path"),  //var to store the measure element draw
        path;
    
    if(denominator < 2)
        path = "M6.168,14.077C2.72,13.017,0,10.133,0,7.539C0,0.198,15.768-2.707,22.279,3.434C29.321,10.075,17.83,17.667,6.168,14.077z M16.686,12.234c1.918-2.928,0.084-8.729-3.238-10.243c-4.88-2.223-7.871,1.565-5.839,7.396C9.014,13.419,14.733,15.213,16.686,12.234z"
    else if(denominator < 4)
        path = "M17.486,3.148c1.469,3.373-1.164,8.055-5.881,10.455c-4.715,2.401-9.729,1.615-11.199-1.76C-1.061,8.473,1.572,3.791,6.287,1.391c3.925-1.998,8.175-1.826,10.306,0.414 M3.581,12.276c2.597,0,5.219-1.139,7.865-3.414c2.694-2.275,4.042-3.968,4.042-5.081c0-0.709-0.293-1.063-0.883-1.063c-1.812,0-4.313,1.088-7.496,3.263C3.973,8.104,2.406,9.874,2.406,11.29C2.406,11.948,2.797,12.276,3.581,12.276"
    else
        path = "M17.486,3.155c1.469,3.373-1.165,8.054-5.881,10.455c-4.716,2.4-9.73,1.613-11.199-1.76C-1.062,8.478,1.571,3.797,6.287,1.397c3.924-1.998,8.174-1.828,10.306,0.414";

    mElem.setAttribute("d", path);
    return mElem;  
}

function DrawNoteFlag(denominator) {
    var mElem = document.createElementNS(xmlns, "path"),  //var to store the measure element draw
        path = "";

    switch(denominator) {
        case 8:
            path = "M0,2.912v45.669l0,0V16.315c19.935,5.05,10.735,22.556,8.94,28.739C25.317,22.686,0.221,13.562,0,0l0,0V2.912z";
            break;

        case 16:
            path = "M0.002,5.295v45.975V23.55c11.844,7.235,18.269,9.305,12.298,25.644C23.705,31.765,9.484,29.475,0.002,12.376v-1.299c16.056,8.143,12.834,15.762,14.275,19.941C18.271,14.282,3.935,12.59,0,0.718V0L0.002,5.295z";
            break;

        case 32:
            path = "M0.117,0v54.249V31.982c11.705,7.726,17.459,9.21,11.5,25.518c5.85-7.556,5.428-12.431,2.362-17.482c0.458-3.398,0.481-6.002,0.174-8.093C17.505,12.538,5.685,14.203,0.117,2.013V0.117H0M0.511,11.287c11.755,6.344,12.836,12.563,13.145,17.347c-2.277-5.295-7.747-6.909-13.145-15.701V11.287z M0.511,20.813c11.915,10.14,11.869,7.747,13.3,18.296C10.558,34.195,5.027,28.956,0.511,20.813z";
            break;

        case 64:
            path = "M0.039-2v47c5.132,4.149,10.288,5.792,12.339,8.736c4.046,5.806,0.109,15.833-0.328,17.361c1.176-1.512,3.526-5.63,3.487-10.547c-0.023-2.949,0.007-8.999-6.763-14.786C2.004,39.977,0,37.079,0,31.619c5.001,4.664,14.618,7.484,13.544,20.459c0.365,0.769,0.622,1.436,0.622,1.436c1.409-4.467,1.061-11.412-2.214-15.78c-3.276-4.368-7.329-6.323-9.719-9.609c-1.747-2.402-2.113-3.681-2.222-7.394c4.914,3.276,10.309,7.158,11.504,9.468c2.635,5.093,2.435,8.775,2.216,10.741c0.642,1.502,0.513,1.893,0.513,1.893s0.675-2.23,0.675-5.288c0-3.057,0.09-6.036-3.076-11.168C8.676,21.245,2.9,18.789,1.469,15.786c-1.092-2.293-1.364-3.058-1.42-6.115c5.023,3.058,7.535,4.368,10.046,7.862c2.512,3.494,3.662,4.461,3.565,12.205c0.546,1.201,0.476,1.553,0.476,1.553s0.969-4.536,0.681-8.172c-0.244-3.065-1.445-6.351-4.284-9.735C7.694,9.999,3.629,6.623,1.579,4.321c-1.355-1.522-1.475-2.397-1.49-3.46";
            break;
    }

    mElem.setAttribute("d", path);
    return mElem; 
}

function DrawRest(denominator) {
    var mElem = document.createElementNS(xmlns, "path"),  //var to store the measure element draw
        path;
    
    if(denominator < 2)
        path = "M0,15,16,15,16,20,0,20z";
    else if(denominator < 4)
        path = "M0,25,16,25,16,30,0,30z";
    else if(denominator < 8)
        path = "M3.549,6.793l9.656,13.197c-9.077,10.346-3.569,14.607-1.321,20.587L1.426,25.355c6.047-7.147,3.625-12.657,1.47-18.208C2.895,7.145,3.548,6.797,3.549,6.793zM11.053,38.878c-11.13-9.971-15.403,3.024-4.436,12.364C5.206,48.82,1.133,36.925,11.598,40.55";
    else if(denominator < 16)
        path = "M8.243,20.609l-0.154,0.694c0.309,0.668,0.822,0.821,1.541,0.463c2.465-1.132,4.263-2.878,5.393-5.24h1.002L8.705,43.338H6.548l5.933-21.033c-2.106,1.337-4.34,2.107-6.703,2.312c-1.541-0.051-2.876-0.538-4.006-1.465C0.694,22.228,0.103,21.021,0,19.531c0.052-2.466,1.31-4.006,3.775-4.623c1.283-0.205,2.388,0.104,3.313,0.924c0.925,0.823,1.412,1.901,1.463,3.236L8.243,20.609";
    else if(denominator < 32)
        path = "M5.859,23.107c-1.116-0.911-1.698-2.104-1.75-3.574c0-2.436,1.243-3.983,3.728-4.642c1.218-0.202,2.283,0.127,3.196,0.989c0.913,0.812,1.395,1.878,1.446,3.195l-0.305,1.599l-0.152,0.685c0.305,0.608,0.812,0.737,1.522,0.379c2.384-1.063,4.235-2.787,5.554-5.172h1.141L8.675,58.033H6.544l5.783-20.771c-2.029,1.317-4.211,2.08-6.544,2.283c-1.521-0.052-2.841-0.535-3.956-1.447C0.711,37.186,0.102,35.992,0,34.522c0.152-2.841,1.649-4.414,4.49-4.718c1.268,0.051,2.257,0.531,2.967,1.446c0.761,0.913,1.115,1.979,1.065,3.196l-0.457,2.054c0.153,0.304,0.406,0.433,0.761,0.382c0.711,0,1.496-0.33,2.359-0.99l1.978-1.599l3.196-12.021c-2.08,1.317-4.287,2.079-6.62,2.282C8.32,24.503,7.026,24.02,5.859,23.107";
    else if(denominator < 64)
        path = "M16.392,5.345l-0.228,0.676c0.301,0.653,0.803,0.802,1.505,0.451c2.356-1.102,4.185-2.805,5.489-5.112h1.051L8.646,57.528H6.541l5.715-20.525c-2.056,1.301-4.235,2.053-6.541,2.252c-1.505-0.049-2.808-0.525-3.911-1.428C0.702,36.923,0.1,35.745,0,34.292c0.15-2.805,1.629-4.358,4.436-4.66c2.508,0.352,3.835,1.781,3.985,4.285L7.97,36.251c0.151,0.297,0.401,0.422,0.751,0.373c0.752,0,1.556-0.326,2.408-0.979l2.028-1.803l3.083-11.803c-2.054,1.301-4.236,2.053-6.542,2.254c-1.454-0.05-2.756-0.526-3.91-1.43c-1.104-0.902-1.68-2.055-1.729-3.457c0.1-2.81,1.579-4.363,4.437-4.665c1.202,0.102,2.179,0.602,2.931,1.504c0.702,0.903,1.028,1.934,0.978,3.085l-0.45,1.956c0.149,0.299,0.4,0.424,0.752,0.375c0.752,0.049,1.553-0.277,2.405-0.98l2.031-2.027L20.45,6.998c-2.054,1.303-4.235,2.055-6.541,2.256C12.457,9.205,11.151,8.728,10,7.826c-1.104-0.902-1.681-2.081-1.73-3.534c0.049-2.407,1.278-3.936,3.685-4.587c1.252-0.2,2.331,0.126,3.232,0.979c0.953,0.802,1.429,1.854,1.429,3.157C16.717,4.392,16.641,4.893,16.392,5.345";
    else
        path = "M18.007,9.36c-1.439-0.05-2.729-0.521-3.87-1.414c-1.091-0.893-1.662-2.059-1.711-3.497c0.049-2.381,1.265-3.894,3.646-4.54c1.29-0.198,2.381,0.125,3.274,0.968c0.894,0.794,1.364,1.835,1.415,3.125l-0.299,1.488l-0.223,0.67c0.297,0.646,0.793,0.793,1.488,0.446c2.381-1.091,4.167-2.777,5.358-5.06h1.041L8.557,72.014H6.474l5.581-20.238c-1.984,1.289-4.117,2.033-6.4,2.229c-1.487-0.047-2.777-0.521-3.868-1.412C0.695,51.698,0.1,50.534,0,49.098c0.149-2.779,1.612-4.316,4.39-4.613c2.48,0.346,3.794,1.76,3.944,4.24l-0.447,2.309c0.149,0.295,0.397,0.42,0.744,0.371c0.695,0,1.463-0.322,2.307-0.967l2.009-1.789l3.199-11.756c-2.034,1.289-4.217,2.034-6.547,2.233c-1.438-0.047-2.729-0.521-3.87-1.414c-1.091-0.896-1.662-2.035-1.711-3.428c0.099-2.777,1.562-4.313,4.39-4.611c1.191,0.1,2.158,0.597,2.902,1.488c0.744,0.894,1.091,1.909,1.042,3.051l-0.446,1.937c0.149,0.297,0.397,0.426,0.744,0.371c0.744,0.055,1.538-0.271,2.381-0.968l2.01-2.012l3.273-11.531c-2.034,1.291-4.191,2.035-6.474,2.232c-1.488-0.049-2.802-0.521-3.943-1.413c-1.092-0.893-1.663-2.059-1.712-3.497c0.05-2.381,1.29-3.894,3.721-4.54c1.241-0.148,2.306,0.173,3.199,0.967c0.942,0.844,1.414,1.886,1.414,3.125l-0.223,1.563l-0.224,0.595c0.298,0.646,0.794,0.793,1.488,0.446c1.34-0.446,2.555-1.339,3.646-2.679L24.48,7.127C22.496,8.417,20.338,9.163,18.007,9.36";

    mElem.setAttribute("d", path);
    return mElem;  
}

function DrawNoteAtt(element) {
    var mElem;  //var to store the measure element draw

    switch(element) {
        case "natural":
            mElem = document.createElementNS(xmlns, "path");  //create new path
            mElem.setAttribute("d", "M11.058-4v32.002H9.315V16.008L0,18.025v-32.393h1.674v12.499L11.058-4zM1.674,3.512v8.8l7.641-1.681v-8.8L1.674,3.512z");
            break;

        case "flat":
            mElem = document.createElementNS(xmlns, "path");  //create new path
            mElem.setAttribute("d", "M1.548-22.403v19.941c0,0,0,1.344,0,4.033c1.786-1.722,3.791-2.604,6.013-2.647c1.389,0,2.58,0.61,3.572,1.828c0.874,1.134,1.33,2.394,1.37,3.78c0.04,1.092-0.219,2.353-0.774,3.781c-0.198,0.588-0.635,1.219-1.31,1.89c-0.516,0.503-1.051,1.029-1.607,1.575C5.875,14.047,2.937,16.336,0,18.646v-41.049H1.548 M6.371,2.958C5.894,2.369,5.279,2.075,4.525,2.075c-0.954,0-1.727,0.567-2.322,1.702c-0.437,0.881-0.655,2.961-0.655,6.238v5.418c0.04,0.168,1.151-0.861,3.334-3.087c1.19-1.175,1.965-2.563,2.322-4.159c0.159-0.63,0.238-1.26,0.238-1.891C7.442,4.911,7.085,3.797,6.371,2.958");
            break;

        case "flat-flat":
            mElem = document.createElementNS(xmlns, "path");  //create new path
            mElem.setAttribute("d", "M1.548-22.403v19.941c0,0,0,1.344,0,4.033c1.786-1.722,3.791-2.604,6.013-2.647c1.389,0,2.58,0.61,3.572,1.828c0.874,1.134,1.33,2.394,1.37,3.78c0.04,1.092-0.219,2.353-0.774,3.78c-0.198,0.588-0.635,1.22-1.31,1.891c-0.516,0.503-1.051,1.029-1.607,1.574C5.875,14.047,2.937,16.336,0,18.646v-41.049H1.548 M6.371,2.958C5.894,2.369,5.279,2.075,4.525,2.075c-0.954,0-1.727,0.567-2.322,1.702c-0.437,0.881-0.655,2.961-0.655,6.239v5.418c0.04,0.168,1.151-0.861,3.334-3.088c1.19-1.175,1.965-2.563,2.322-4.158c0.159-0.63,0.238-1.261,0.238-1.892C7.442,4.911,7.085,3.797,6.371,2.958M15.61-22.403v19.941c0,0,0,1.344,0,4.033c1.786-1.722,3.791-2.604,6.013-2.647c1.389,0,2.58,0.61,3.572,1.828c0.874,1.134,1.33,2.394,1.37,3.78c0.04,1.092-0.219,2.353-0.774,3.781c-0.198,0.588-0.635,1.22-1.31,1.891c-0.516,0.503-1.051,1.029-1.607,1.574c-2.937,2.27-5.875,4.559-8.812,6.869v-41.05H15.61 M20.434,2.958c-0.477-0.589-1.092-0.883-1.846-0.883c-0.954,0-1.727,0.567-2.322,1.702c-0.437,0.881-0.655,2.961-0.655,6.239v5.418c0.04,0.168,1.151-0.861,3.334-3.088c1.19-1.175,1.965-2.563,2.322-4.158c0.159-0.631,0.238-1.261,0.238-1.892C21.504,4.911,21.147,3.796,20.434,2.958");
            break;

        case "sharp":
            mElem = document.createElementNS(xmlns, "path");  //create new path
            mElem.setAttribute("d", "M4.907,15.006V2.586l5.147-1.457v12.357L4.907,15.006L4.907,15.006zM15.042,12.002l-3.539,1.04V0.685l3.539-1.014v-5.133l-3.539,1.014v-12.626h-1.45v13.009L4.906-2.547v-12.277H3.539v12.745L0-1.063V4.08l3.539-1.013V15.4L0,16.411v5.122l3.539-1.014v12.555h1.367V20.07l5.147-1.452v12.214h1.449V18.16l3.539-1.018L15.042,12.002L15.042,12.002z");
            break;

        case "double-sharp":
            mElem = document.createElementNS(xmlns, "path");  //create new path
            mElem.setAttribute("d", "M0.451,0.436C0.348,0.491,0.254,0.57,0.169,0.675C0.085,0.779,0.028,0.883,0,0.988c0.015,0.26,0.086,1.008,0.213,2.245C0.34,4.47,0.436,5.243,0.502,5.553c0.108,0.443,0.443,0.66,1.003,0.652c0.459,0.003,0.919,0.046,1.379,0.132c0.459,0.083,0.869,0.19,1.229,0.319c0.211,0.082,0.429,0.194,0.652,0.338c0.224,0.145,0.391,0.282,0.502,0.414l0.15,0.15l-0.201,0.15C4.852,8.064,4.34,8.345,3.68,8.549c-0.66,0.206-1.385,0.31-2.175,0.314C0.945,8.854,0.61,9.072,0.502,9.515C0.436,9.827,0.34,10.608,0.213,11.86C0.085,13.113,0.015,13.868,0,14.13c0.034,0.109,0.115,0.228,0.244,0.357s0.248,0.21,0.357,0.245c0.283-0.016,1.046-0.095,2.288-0.239c1.243-0.141,2.019-0.247,2.326-0.313c0.247-0.063,0.418-0.188,0.514-0.376c0.097-0.188,0.143-0.514,0.138-0.979c0.027-0.38,0.075-0.748,0.145-1.104c0.07-0.354,0.155-0.671,0.256-0.953c0.082-0.236,0.195-0.477,0.338-0.72C6.752,9.804,6.89,9.626,7.022,9.515l0.15-0.15l0.15,0.15c0.132,0.111,0.27,0.289,0.414,0.533c0.145,0.244,0.257,0.484,0.338,0.72c0.102,0.282,0.187,0.599,0.256,0.953c0.071,0.356,0.119,0.724,0.145,1.104c-0.004,0.464,0.042,0.79,0.138,0.979c0.096,0.188,0.267,0.313,0.514,0.376c0.308,0.067,1.083,0.172,2.326,0.313c1.243,0.144,2.006,0.222,2.289,0.239c0.109-0.034,0.228-0.116,0.357-0.245c0.128-0.128,0.21-0.248,0.244-0.357c-0.015-0.262-0.084-1.017-0.212-2.27c-0.127-1.252-0.223-2.034-0.289-2.345C13.735,9.072,13.4,8.854,12.84,8.863c-0.46-0.003-0.919-0.047-1.379-0.132s-0.869-0.191-1.229-0.32C10.021,8.33,9.804,8.217,9.58,8.072C9.356,7.929,9.189,7.791,9.079,7.659L8.928,7.508l0.202-0.149c0.364-0.355,0.875-0.636,1.536-0.84c0.658-0.206,1.384-0.31,2.175-0.313c0.56,0.008,0.895-0.209,1.003-0.652c0.065-0.312,0.161-1.094,0.289-2.346c0.128-1.251,0.199-2.009,0.212-2.27c-0.033-0.11-0.115-0.228-0.244-0.357c-0.129-0.128-0.248-0.21-0.357-0.245c-0.283,0.016-1.046,0.096-2.289,0.238c-1.243,0.143-2.018,0.247-2.325,0.313C8.882,0.95,8.711,1.076,8.615,1.265C8.519,1.452,8.472,1.778,8.477,2.242C8.45,2.623,8.402,2.99,8.332,3.346c-0.07,0.354-0.155,0.672-0.257,0.953C7.994,4.536,7.881,4.777,7.737,5.02C7.592,5.264,7.455,5.441,7.323,5.553l-0.15,0.15l-0.15-0.15C6.89,5.441,6.752,5.264,6.608,5.02C6.464,4.777,6.351,4.536,6.27,4.299C6.168,4.019,6.083,3.701,6.013,3.346C5.943,2.99,5.895,2.623,5.868,2.242c0.005-0.464-0.042-0.79-0.138-0.977C5.634,1.076,5.463,0.95,5.216,0.888C4.961,0.82,4.23,0.717,3.022,0.574c-1.208-0.142-1.964-0.222-2.27-0.238C0.652,0.344,0.551,0.378,0.451,0.436L0.451,0.436L0.451,0.436z");
            break;

        default:
            throw "INVALID_NOTE_ATT_TO_DRAW: " + element;

    }


    return mElem;
}


function DrawMeasureElement(element) {
    var mElem;  //var to store the measure element draw

    switch(element) {
        case "SIMPLE_BAR":
            mElem = document.createElementNS(xmlns, "line");  //create new line
            mElem.setAttribute("y2", 60);
            mElem.setAttribute("stroke", "#000");
            break;

        case "AUX_LINE1":
            mElem = document.createElementNS(xmlns, "line");  //create new line
            mElem.setAttribute("x2", 35);
            mElem.setAttribute("stroke", "#000");
            //mElem.setAttribute("stroke-width", "3");
            break;

        case "AUX_LINE2":
            mElem = document.createElementNS(xmlns, "line");  //create new line
            mElem.setAttribute("x2", 28);
            mElem.setAttribute("stroke", "#000");
            //mElem.setAttribute("stroke-width", "3");
            break;

        default:
            throw "INVALID_MEASURE_ELEMENT_TO_DRAW";
    }     

    return mElem;
}